{"version":3,"sources":["redFlagSpec.js"],"names":["expect","chai","use","chaiHttp","describe","it","done","incidents","createdBy","type","location","status","images","videos","comment","request","server","post","set","send","end","error","response","to","have","body","be","an","data","property","eql","get","redFlagLocation","patch","delete"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;IAIEA,M,GACEC,c,CADFD,M;;;AAGFC,eAAKC,GAAL,CAASC,kBAAT;;AAEAC,SAAS,gBAAT,EAA2B,YAAM;AAC/BC,KAAG,iCAAH,EAAsC,UAACC,IAAD,EAAU;AAC9C,QAAMC,YAAY;AAChBC,iBAAW,CADK;AAEhBC,YAAM,cAFU;AAGhBC,gBAAU,oBAHM;AAIhBC,cAAQ,UAJQ;AAKhBC,cAAQ,4FALQ;AAMhBC,cAAQ,0GANQ;AAOhBC,eAAS;AAPO,KAAlB;AASAb,mBAAKc,OAAL,CAAaC,gBAAb,EACGC,IADH,CACQ,mBADR,EAEGC,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGC,IAJH,CAIQZ,SAJR,EAKGa,GALH,CAKO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAT,CAAcG,IAAd,CAAmB,CAAnB,CAAP,EAA8BL,EAA9B,CAAiCC,IAAjC,CAAsCK,QAAtC,CAA+C,SAA/C,EAA0DC,GAA1D,CAA8D,yBAA9D;AACAxB;AACD,KAVH;AAWD,GArBD;;AAuBAD,KAAG,kDAAH,EAAuD,UAACC,IAAD,EAAU;AAC/D,QAAMC,YAAY;AAChBC,iBAAW,CADK;AAEhBC,YAAM,cAFU;AAGhBC,gBAAU,oBAHM;AAIhBC,cAAQ,UAJQ;AAKhBC,cAAQ,wFALQ;AAMhBC,cAAQ,EANQ;AAOhBC,eAAS;AAPO,KAAlB;AASAb,mBAAKc,OAAL,CAAaC,gBAAb,EACGC,IADH,CACQ,mBADR,EAEGC,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGC,IAJH,CAIQZ,SAJR,EAKGa,GALH,CAKO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACArB;AACD,KATH;AAUD,GApBD;AAqBD,CA7CD;;AA+CAF,SAAS,2BAAT,EAAsC,YAAM;AAC1CC,KAAG,iCAAH,EAAsC,UAACC,IAAD,EAAU;AAC9CL,mBAAKc,OAAL,CAAaC,gBAAb,EACGe,GADH,CACO,mBADP,EAEGb,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGE,GAJH,CAIO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAT,CAAcG,IAAd,CAAmB,CAAnB,CAAP,EAA8BL,EAA9B,CAAiCC,IAAjC,CAAsCK,QAAtC,CAA+C,SAA/C,EAA0DC,GAA1D,CAA8D,6CAA9D;AACAxB;AACD,KATH;AAUD,GAXD;AAYD,CAbD;;AAeAF,SAAS,iCAAT,EAA4C,YAAM;AAChDC,KAAG,iCAAH,EAAsC,UAACC,IAAD,EAAU;AAC9CL,mBAAKc,OAAL,CAAaC,gBAAb,EACGe,GADH,CACO,qBADP,EAEGb,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGE,GAJH,CAIO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAT,CAAcG,IAAd,CAAmB,CAAnB,CAAP,EAA8BL,EAA9B,CAAiCC,IAAjC,CAAsCK,QAAtC,CAA+C,SAA/C,EAA0DC,GAA1D,CAA8D,+CAA9D;AACAxB;AACD,KATH;AAUD,GAXD;;AAaAD,KAAG,+DAAH,EAAoE,UAACC,IAAD,EAAU;AAC5EL,mBAAKc,OAAL,CAAaC,gBAAb,EACGe,GADH,CACO,sBADP,EAEGb,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGE,GAJH,CAIO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBC,IAAzB,CAA8BK,QAA9B,CAAuC,OAAvC,EAAgDC,GAAhD,CAAoD,qDAApD;AACAxB;AACD,KATH;AAUD,GAXD;;AAaAD,KAAG,kEAAH,EAAuE,UAACC,IAAD,EAAU;AAC/EL,mBAAKc,OAAL,CAAaC,gBAAb,EACGe,GADH,CACO,sBADP,EAEGb,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGE,GAJH,CAIO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBC,IAAzB,CAA8BK,QAA9B,CAAuC,OAAvC,EAAgDC,GAAhD,CAAoD,8BAApD;AACAxB;AACD,KATH;AAUD,GAXD;AAYD,CAvCD;;AAyCAF,SAAS,4CAAT,EAAuD,YAAM;AAC3DC,KAAG,6DAAH,EAAkE,UAACC,IAAD,EAAU;AAC1E,QAAM0B,kBAAkB;AACtBtB,gBAAU;AADY,KAAxB;AAGAT,mBAAKc,OAAL,CAAaC,gBAAb,EACGiB,KADH,CACS,8BADT,EAEGf,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGC,IAJH,CAIQa,eAJR,EAKGZ,GALH,CAKO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAT,CAAcG,IAAd,CAAmB,CAAnB,CAAP,EAA8BL,EAA9B,CAAiCC,IAAjC,CAAsCK,QAAtC,CAA+C,SAA/C,EAA0DC,GAA1D,CAA8D,oCAA9D;AACAxB;AACD,KAVH;AAWD,GAfD;;AAiBAD,KAAG,+DAAH,EAAoE,UAACC,IAAD,EAAU;AAC5EL,mBAAKc,OAAL,CAAaC,gBAAb,EACGiB,KADH,CACS,+BADT,EAEGf,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGE,GAJH,CAIO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBC,IAAzB,CAA8BK,QAA9B,CAAuC,OAAvC,EAAgDC,GAAhD,CAAoD,qDAApD;AACAxB;AACD,KATH;AAUD,GAXD;;AAaAD,KAAG,kEAAH,EAAuE,UAACC,IAAD,EAAU;AAC/EL,mBAAKc,OAAL,CAAaC,gBAAb,EACGiB,KADH,CACS,+BADT,EAEGf,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGE,GAJH,CAIO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBC,IAAzB,CAA8BK,QAA9B,CAAuC,OAAvC,EAAgDC,GAAhD,CAAoD,8BAApD;AACAxB;AACD,KATH;AAUD,GAXD;;AAaAD,KAAG,0DAAH,EAA+D,UAACC,IAAD,EAAU;AACvE,QAAM0B,kBAAkB;AACtBtB,gBAAU;AADY,KAAxB;AAGAT,mBAAKc,OAAL,CAAaC,gBAAb,EACGiB,KADH,CACS,8BADT,EAEGf,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGC,IAJH,CAIQa,eAJR,EAKGZ,GALH,CAKO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBC,IAAzB,CAA8BK,QAA9B,CAAuC,OAAvC,EAAgDC,GAAhD,CAAoD,yBAApD;AACAxB;AACD,KAVH;AAWD,GAfD;;AAiBAD,KAAG,0DAAH,EAA+D,UAACC,IAAD,EAAU;AACvE,QAAM0B,kBAAkB;AACtBtB,gBAAU;AADY,KAAxB;AAGAT,mBAAKc,OAAL,CAAaC,gBAAb,EACGiB,KADH,CACS,8BADT,EAEGf,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGC,IAJH,CAIQa,eAJR,EAKGZ,GALH,CAKO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBC,IAAzB,CAA8BK,QAA9B,CAAuC,OAAvC,EAAgDC,GAAhD,CAAoD,+BAApD;AACAxB;AACD,KAVH;AAWD,GAfD;AAgBD,CA7ED;;AA+EAF,SAAS,6CAAT,EAAwD,YAAM;AAC5DC,KAAG,6DAAH,EAAkE,UAACC,IAAD,EAAU;AAC1EL,mBAAKc,OAAL,CAAaC,gBAAb,EACGkB,MADH,CACU,sBADV,EAEGhB,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGE,GAJH,CAIO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAT,CAAcG,IAAd,CAAmB,CAAnB,CAAP,EAA8BL,EAA9B,CAAiCC,IAAjC,CAAsCK,QAAtC,CAA+C,SAA/C,EAA0DC,GAA1D,CAA8D,+CAA9D;AACAxB;AACD,KATH;AAUD,GAXD;;AAaAD,KAAG,+DAAH,EAAoE,UAACC,IAAD,EAAU;AAC5EL,mBAAKc,OAAL,CAAaC,gBAAb,EACGkB,MADH,CACU,uBADV,EAEGhB,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGE,GAJH,CAIO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBC,IAAzB,CAA8BK,QAA9B,CAAuC,OAAvC,EAAgDC,GAAhD,CAAoD,qDAApD;AACAxB;AACD,KATH;AAUD,GAXD;;AAaAD,KAAG,kEAAH,EAAuE,UAACC,IAAD,EAAU;AAC/EL,mBAAKc,OAAL,CAAaC,gBAAb,EACGkB,MADH,CACU,sBADV,EAEGhB,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGA,GAHH,CAGO,QAHP,EAGiB,kBAHjB,EAIGE,GAJH,CAIO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBtB,aAAOsB,QAAP,EAAiBC,EAAjB,CAAoBC,IAApB,CAAyBb,MAAzB,CAAgC,GAAhC;AACAX,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBG,EAAzB,CAA4BC,EAA5B,CAA+B,QAA/B;AACA3B,aAAOsB,SAASG,IAAhB,EAAsBF,EAAtB,CAAyBC,IAAzB,CAA8BK,QAA9B,CAAuC,OAAvC,EAAgDC,GAAhD,CAAoD,8BAApD;AACAxB;AACD,KATH;AAUD,GAXD;AAYD,CAvCD","file":"redFlagSpec.js","sourceRoot":"/home/dubby/Documents/andelaBootcamp/iReporter/iReporter/dummyApi/tests","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../server';\n\n\nconst {\n  expect\n} = chai;\n\nchai.use(chaiHttp);\n\ndescribe('/POST red-flag', () => {\n  it('should create a red-flag record', (done) => {\n    const incidents = {\n      createdBy: 2,\n      type: 'intervention',\n      location: '6.524379, 3.379206',\n      status: 'rejected',\n      images: 'https://static.pulse.ng/img/incoming/origs7872357/5196368231-w644-h960/DSuR9f-XUAY9MDF.jpg',\n      videos: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTVtbtjMiVvbOLVc7dA53s3_st7BjF-wtTxNu8Tq_-5al0IZBId',\n      comment: '$24 billion NNPC contract scam'\n    };\n    chai.request(server)\n      .post('/api/v1/red-flags')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .send(incidents)\n      .end((error, response) => {\n        expect(response).to.have.status(201);\n        expect(response.body).to.be.an('object');\n        expect(response.body.data[0]).to.have.property('message').eql('Created red-flag record');\n        done();\n      });\n  });\n\n  it('should not create a red flag if input is invalid', (done) => {\n    const incidents = {\n      createdBy: 2,\n      type: 'intervention',\n      location: '6.524379, 3.379206',\n      status: 'rejected',\n      images: 'https://static.pulse.ng/img/incoming/origs7872357/5196368231-w644-h960/DSuR9f-XUAY9MDF',\n      videos: '',\n      comment: '$24 billion NNPC contract scam'\n    };\n    chai.request(server)\n      .post('/api/v1/red-flags')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .send(incidents)\n      .end((error, response) => {\n        expect(response).to.have.status(400);\n        expect(response.body).to.be.an('object');\n        done();\n      });\n  });\n});\n\ndescribe('/GET all red-flag records', () => {\n  it('should get all red-flag records', (done) => {\n    chai.request(server)\n      .get('/api/v1/red-flags')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .end((error, response) => {\n        expect(response).to.have.status(200);\n        expect(response.body).to.be.an('object');\n        expect(response.body.data[0]).to.have.property('message').eql('All red-flag records retrieved successfully');\n        done();\n      });\n  });\n});\n\ndescribe('/GET a specific red-flag record', () => {\n  it('should get a red-flag record id', (done) => {\n    chai.request(server)\n      .get('/api/v1/red-flags/1')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .end((error, response) => {\n        expect(response).to.have.status(200);\n        expect(response.body).to.be.an('object');\n        expect(response.body.data[0]).to.have.property('message').eql('The given red-flag id retrieved successfullly');\n        done();\n      });\n  });\n\n  it('should return an error if the red-flag record id is not found', (done) => {\n    chai.request(server)\n      .get('/api/v1/red-flags/10')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .end((error, response) => {\n        expect(response).to.have.status(404);\n        expect(response.body).to.be.an('object');\n        expect(response.body).to.have.property('error').eql('The red-flag record with the given ID was not found');\n        done();\n      });\n  });\n\n  it('should return an error if the red-flag record id is not a number', (done) => {\n    chai.request(server)\n      .get('/api/v1/red-flags/rf')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .end((error, response) => {\n        expect(response).to.have.status(400);\n        expect(response.body).to.be.an('object');\n        expect(response.body).to.have.property('error').eql('The given id is not a number');\n        done();\n      });\n  });\n});\n\ndescribe('/PATCH a specific red-flag record location', () => {\n  it('it should update the location of a specific red-flag record', (done) => {\n    const redFlagLocation = {\n      location: '6.524379, 3.379206'\n    };\n    chai.request(server)\n      .patch('/api/v1/red-flags/1/location')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .send(redFlagLocation)\n      .end((error, response) => {\n        expect(response).to.have.status(200);\n        expect(response.body).to.be.an('object');\n        expect(response.body.data[0]).to.have.property('message').eql('Updated red-flag record’s location');\n        done();\n      });\n  });\n\n  it('should return an error if the red-flag record id is not found', (done) => {\n    chai.request(server)\n      .patch('/api/v1/red-flags/10/location')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .end((error, response) => {\n        expect(response).to.have.status(404);\n        expect(response.body).to.be.an('object');\n        expect(response.body).to.have.property('error').eql('The red-flag record with the given ID was not found');\n        done();\n      });\n  });\n\n  it('should return an error if the red-flag record id is not a number', (done) => {\n    chai.request(server)\n      .patch('/api/v1/red-flags/rf/location')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .end((error, response) => {\n        expect(response).to.have.status(400);\n        expect(response.body).to.be.an('object');\n        expect(response.body).to.have.property('error').eql('The given id is not a number');\n        done();\n      });\n  });\n\n  it('it should return an error if the location input is empty', (done) => {\n    const redFlagLocation = {\n      location: ''\n    };\n    chai.request(server)\n      .patch('/api/v1/red-flags/1/location')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .send(redFlagLocation)\n      .end((error, response) => {\n        expect(response).to.have.status(400);\n        expect(response.body).to.be.an('object');\n        expect(response.body).to.have.property('error').eql('Please enter a location');\n        done();\n      });\n  });\n\n  it('it should return an error if the location input is empty', (done) => {\n    const redFlagLocation = {\n      location: '109, 180'\n    };\n    chai.request(server)\n      .patch('/api/v1/red-flags/1/location')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .send(redFlagLocation)\n      .end((error, response) => {\n        expect(response).to.have.status(400);\n        expect(response.body).to.be.an('object');\n        expect(response.body).to.have.property('error').eql('Please enter a valid location');\n        done();\n      });\n  });\n});\n\ndescribe('/DELETE a specific red-flag record location', () => {\n  it('it should delete the location of a specific red-flag record', (done) => {\n    chai.request(server)\n      .delete('/api/v1/red-flags/1/')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .end((error, response) => {\n        expect(response).to.have.status(200);\n        expect(response.body).to.be.an('object');\n        expect(response.body.data[0]).to.have.property('message').eql('red-flag record has been deleted successfully');\n        done();\n      });\n  });\n\n  it('should return an error if the red-flag record id is not found', (done) => {\n    chai.request(server)\n      .delete('/api/v1/red-flags/10/')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .end((error, response) => {\n        expect(response).to.have.status(404);\n        expect(response.body).to.be.an('object');\n        expect(response.body).to.have.property('error').eql('The red-flag record with the given ID was not found');\n        done();\n      });\n  });\n\n  it('should return an error if the red-flag record id is not a number', (done) => {\n    chai.request(server)\n      .delete('/api/v1/red-flags/rf')\n      .set('Content-Type', 'application/json')\n      .set('Accept', 'application/json')\n      .end((error, response) => {\n        expect(response).to.have.status(400);\n        expect(response.body).to.be.an('object');\n        expect(response.body).to.have.property('error').eql('The given id is not a number');\n        done();\n      });\n  });\n});"]}