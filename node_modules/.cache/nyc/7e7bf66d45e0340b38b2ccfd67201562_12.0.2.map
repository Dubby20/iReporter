{"version":3,"sources":["redFlagController.js"],"names":["red_Flag_Validator","RedFlagValidator","RedFlagControllers","request","response","result","testRedFlag","body","passing","status","json","error","err","postRedFlag","id","incidents","length","createdOn","Date","createdBy","type","location","images","videos","comment","map","item","console","log","userId","users","i","push","data","message"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAIA;;;;;AAKA,IAAMA,qBAAqB,IAAIC,iCAAJ,EAA3B;;IACMC,kB;;;;;;;;AACJ;;;;;;;;;;kCAWqBC,O,EAASC,Q,EAAU;AACtC,UAAMC,SAASL,mBAAmBM,WAAnB,CAA+BH,QAAQI,IAAvC,CAAf;AACA,UAAI,CAACF,OAAOG,OAAZ,EAAqB;AACnB,eAAOJ,SAASK,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BD,kBAAQ,GADuB;AAE/BE,iBAAON,OAAOO;AAFiB,SAA1B,CAAP;AAID;AACD,UAAMC,cAAc;AAClBC,YAAIC,kBAAUC,MAAV,GAAmB,CADL;AAElBC,mBAAW,IAAIC,IAAJ,EAFO;AAGlBC,mBAAWhB,QAAQI,IAAR,CAAaY,SAHN;AAIlBC,cAAMjB,QAAQI,IAAR,CAAaa,IAJD;AAKlBC,kBAAUlB,QAAQI,IAAR,CAAac,QALL;AAMlBZ,gBAAQN,QAAQI,IAAR,CAAaE,MANH;AAOlBa,gBAAQnB,QAAQI,IAAR,CAAae,MAPH;AAQlBC,gBAAQpB,QAAQI,IAAR,CAAagB,MARH;AASlBC,iBAASrB,QAAQI,IAAR,CAAaiB;AATJ,OAApB;AAWA,UAAMV,KAAKC,kBAAUU,GAAV,CAAc;AAAA,eAAQC,KAAKP,SAAb;AAAA,OAAd,CAAX;AACAQ,cAAQC,GAAR,CAAYd,EAAZ;AACA,UAAMe,SAASf,GAAGW,GAAH,CAAO;AAAA,eAAKK,gBAAML,GAAN,CAAU;AAAA,iBAAQC,KAAKZ,EAAL,KAAYiB,CAApB;AAAA,SAAV,CAAL;AAAA,OAAP,CAAf;AACA;AACA,UAAIF,WAAW,KAAf,EAAsB;AACpB,eAAO,yBAAP;AACD;AACDF,cAAQC,GAAR,CAAYC,MAAZ;AACAd,wBAAUiB,IAAV,CAAenB,WAAf;AACA,aAAOT,SAASK,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BD,gBAAQ,GADuB;AAE/BwB,cAAM,CAAC;AACLnB,cAAID,YAAYC,EADX;AAEL;AACAoB,mBAAS;AAHJ,SAAD;AAFyB,OAA1B,CAAP;AAQD;;;;;;kBAIYhC,kB","file":"redFlagController.js","sourceRoot":"/home/dubby/Documents/andelaBootcamp/iReporter/iReporter/dummyApi/controllers","sourcesContent":["import incidents from '../models/redFlag';\nimport users from '../models/users';\nimport {\n  RedFlagValidator\n} from '../Helpers/validateRedFlag';\n\n/**\n * Creates a new redFlagValidator.\n * @class redFlagValidator\n */\n\nconst red_Flag_Validator = new RedFlagValidator();\nclass RedFlagControllers {\n  /**\n   * Creates a red-flag\n   * * @api {post} /api/user Create red-flag\n   *\n   * @param {object} request - Request object\n   * @param {object} response - Response object\n\n   * @returns {json} created object\n   * @memberof redFlagControllers\n   */\n\n  static createRedFlag(request, response) {\n    const result = red_Flag_Validator.testRedFlag(request.body);\n    if (!result.passing) {\n      return response.status(400).json({\n        status: 400,\n        error: result.err\n      });\n    }\n    const postRedFlag = {\n      id: incidents.length + 1,\n      createdOn: new Date(),\n      createdBy: request.body.createdBy,\n      type: request.body.type,\n      location: request.body.location,\n      status: request.body.status,\n      images: request.body.images,\n      videos: request.body.videos,\n      comment: request.body.comment\n    };\n    const id = incidents.map(item => item.createdBy);\n    console.log(id);\n    const userId = id.map(i => users.map(item => item.id === i));\n    // incidents.createdBy = userId;\n    if (userId === false) {\n      return 'The userId is not found';\n    }\n    console.log(userId);\n    incidents.push(postRedFlag);\n    return response.status(201).json({\n      status: 201,\n      data: [{\n        id: postRedFlag.id,\n        // incidents,\n        message: 'Created red-flag record'\n      }]\n    });\n  }\n}\n\n\nexport default RedFlagControllers;"]}